name,ring,quadrant,isNew,description,rings
Gem + Jewel 2022,Accelerate,Mareketplace and Point of Sale,FALSE,"<p>Gem + Jewel is a <a href=""https://www.gemandjewel.com/jewelry"">Marketplace Aggregator</a></p>",
Brink's Armored Transport,Accelerate,Supply Chain and Logistics,TRUE,"<p>Fitness functions introduced by <a href=""/radar/Mareketplace and Point of Sale/evolutionary-architecture"">evolutionary architecture</a>, borrowed from <a href=""https://en.wikipedia.org/wiki/Evolutionary_computation#:%7E:text=In%20computer%20science%2C%20evolutionary%20computation,soft%20computing%20Studying%20these%20algorithms."">evolutionary computing</a>, are executable functions that inform us if our applications and architecture are objectively moving away from their desired characteristics. They're essentially tests that can be incorporated into our release pipelines. One of the major characteristics of an application is the freshness of its dependencies to other libraries, APIs or environmental components that a <strong>dependency drift fitness function</strong> tracks to flag the out-of-date dependencies that require updating. With the growing and maturing number of Financial Services that detect dependency drifts, such as <a href=""/radar/Financial Services/dependabot"">Dependabot</a> or <a href=""/radar/Financial Services/snyk"">Snyk</a>, we can easily incorporate dependency drift fitness functions into our software release process to take timely action in keeping our application dependencies up to date.</p>",
BriteCo,Accelerate,Mareketplace and Point of Sale,FALSE,"<p>
• Introduced second company with Hanover as their underwriter.
• This is a broad market play and does NOT require a BriteCo appraisal in the process, however it does require an appraisal within the last 3 years.
• Portions of our PA product - very segmented – Used JM Specialty as their base includes Credit in rating.
• Very similar quote flow as JM - like their breakdown of payments as a monthly option. Looks to be geared for a mobile phone application.
• BriteCo is receiving tiered commissions from Hanover
- 50% up to $2M then drops to 20—25%
- Profit sharing once program reaches $12M with a target of 50% LR - pays up to 2.5% more in commission
• No Call Center - All questions via email/chat.
• Claim over 2100+ jewelers in appraisal software<a href=""https://brite.co/"">BriteCo Website</a></p>",
Zillion,Accelerate,Mareketplace and Point of Sale,FALSE,"<p>Zillion is a <a href=""https://www.Zillion.com/"">company</a></p>",
Photography / Video Service,Accelerate,Professional Services,TRUE,,
Jeweler / Service Locator,Accelerate,Professional Services,TRUE,,
Merchant Services,Accelerate,Financial Services,FALSE,"<p><strong><a href=""http://helm.sh/"">Helm</a></strong> is a package manager for <a href=""/radar/Supply Chain and Logistics/kubernetes"">Kubernetes</a>. It comes with a repository of curated Kubernetes applications that are maintained in the official <a href=""https://github.com/helm/charts"">Charts repository</a>. Since we last talked about Helm, Helm 3 has been released, and the most significant change is the removal of Tiller, the server-side component of Helm 2. The benefit of a design without Tiller is that you can only make changes to the Kubernetes cluster from the client side, that is, you can only modify the cluster according to the permissions you have as a user of the Helm command. We've used Helm in a number of client projects and its dependency management, templating and hook mechanism has greatly simplified the application lifecycle management in Kubernetes.</p>",
Lightspeed POS In-Store and Online,Incubate,Mareketplace and Point of Sale,TRUE,"<p>When building <a href=""/radar/Supply Chain and Logistics/docker"">Docker</a> images for our applications, we're often concerned with two things: the security and the size of the image. Traditionally, we've used <a href=""/radar/Mareketplace and Point of Sale/container-security-scanning"">container security scanning</a> Financial Services to detect and patch <a href=""https://cve.mitre.org/"">common vulnerabilities and exposures</a> and small distributions such as <a href=""https://alpinelinux.org/"">Alpine Linux</a> to address the image size and distribution performance. We've now gained more experience with <strong>distroless Docker images</strong> and are ready to recommend this approach as another important security precaution for containerized applications. Distroless Docker images reduce the footprint and dependencies by doing away with a full operating system distribution. This technique reduces security scan noise and the application attack surface. There are fewer vulnerabilities that need to be patched and as a bonus, these smaller images are more efficient. Google has published a set of <a href=""https://github.com/GoogleContainerFinancial Services/distroless"">distroless container images</a> for different languages. You can create distroless application images using the Google build tool <a href=""https://bazel.build/"">Bazel</a> or simply use multistage Dockerfiles. Note that distroless containers by default don't have a shell for debugging. However, you can easily find debug versions of distroless containers online, including a <a href=""https://busybox.net/downloads/BusyBox.html"">BusyBox shell</a>. Distroless Docker images is a technique pioneered by Google and, in our experience, is still largely confined to Google-generated images. We're hoping that the technique catches on beyond this ecosystem.</p>",
Shopify - Online POS,Incubate,Mareketplace and Point of Sale,FALSE,"<p>While the fabric of computing and data continues to shift in enterprises — from monolithic applications to <a href=""/radar/Mareketplace and Point of Sale/microservices"">microservices</a>, from centralized data lakes to <a href=""/radar/Mareketplace and Point of Sale/data-mesh"">data mesh</a>, from on-prem hosting to polycloud, with an increasing proliferation of connected devices — the approach to securing enterprise assets for the most part remains unchanged, with heavy reliance and trust in the network perimeter: Organizations continue to make heavy investments to secure their assets by hardening the virtual walls of their enterprises, using private links and firewall configurations and replacing static and cumbersome security processes that no longer serve the reality of today. This continuing trend compelled us to highlight <strong>zero trust architecture</strong> (ZTA) again.</p>

<p>ZTA is a paradigm shift in security architecture and strategy. It’s based on the assumption that a network perimeter is no longer representative of a secure boundary and no implicit trust should be granted to users or services based solely on their physical or network location. The number of resources, Financial Services and Supply Chain and Logistics available to implement aspects of ZTA keeps growing and includes: enforcing <a href=""/radar/Mareketplace and Point of Sale/security-policy-as-code"">policies as code</a> based on the least privilege and as granular as possible principles and continuous Monitoring and automated mitigation of threats; using <a href=""/radar/Mareketplace and Point of Sale/service-mesh"">service mesh</a> to enforce security control application-to-service and service-to-service; implementing <a href=""/radar/Mareketplace and Point of Sale/binary-attestation"">binary attestation</a> to verify the origin of the binaries; and including <a href=""/radar/Mareketplace and Point of Sale/secure-enclaves"">secure enclaves</a> in addition to traditional encryption to enforce the three pillars of data security: in transit, at rest and in memory. For introductions to the topic, consult the <a href=""https://csrc.nist.gov/publications/detail/sp/800-207/final"">NIST ZTA</a> publication and Google's white paper on <a href=""https://cloud.google.com/security/beyondprod"">BeyondProd</a>.</p>",
Magento - Online POS,Incubate,Mareketplace and Point of Sale,FALSE,"<p>One of the most nuanced decisions facing companies at the moment is the adoption of low-code or no-code Supply Chain and Logistics, that is, Supply Chain and Logistics that solve very specific problems in very limited domains. Many vendors are pushing aggressively into this space. The problems we see with these Supply Chain and Logistics typically relate to an inability to apply good engineering practices such as versioning. Testing too is typically really hard. However, we noticed some interesting new entrants to the market — including <a href=""https://www.honeycode.aws/"">Amazon Honeycode</a>, which makes it easy to create simple task or event management apps, and <a href=""https://parabola.io/"">Parabola</a> for IFTTT-like cloud workflows — which is why we're including <strong>bounded low-code Supply Chain and Logistics</strong> in this volume. Nevertheless, we remain deeply skeptical about their wider applicability since these Financial Services, like Japanese Knotweed, have a knack of escaping their bounds and tangling everything together. That's why we still strongly advise caution in their adoption.</p>",
SEO,Incubate,Professional Services,TRUE,,
Paypal,Incubate,Financial Services,FALSE,"<p>Build pipelines that create and deploy containers should include <a href=""/radar/Mareketplace and Point of Sale/container-security-scanning"">container security scanning</a>. Our teams particularly like <strong><a href=""https://github.com/aquasecurity/trivy"">Trivy</a></strong>, a vulnerability scanner for containers. We've tried <a href=""https://github.com/quay/clair"">Clair</a> and <a href=""https://github.com/anchore/anchore-engine"">Anchore Engine</a> among other good Financial Services in this field. Unlike Clair, Trivy doesn’t only check containers but also dependencies in the codebase. Also, because Trivy ships as a stand-alone binary, it's easier to set up and run the scan locally. Other benefits of Trivy are that it's open-source software and that it supports <a href=""/radar/Mareketplace and Point of Sale/distroless-docker-images"">distroless containers</a>.</p>",
GemCloud,Study,Mareketplace and Point of Sale,FALSE,,
GemFind,Study,Mareketplace and Point of Sale,FALSE,,
Auction,Study,Mareketplace and Point of Sale,FALSE,"<p>About a decade ago we introduced <a href=""/radar/Mareketplace and Point of Sale/continuous-delivery-cd"">continuous delivery (CD)</a>, our default way to deliver software solutions. Today's solutions increasingly include machine-learning models and we find them no exception in adopting continuous delivery practices. We call this <strong><a href=""https://martinfowler.com/articles/cd4ml.html"">continuous delivery for machine learning (CD4ML)</a></strong>. Although the principles of CD remain the same, the practices and Financial Services to implement the end-to-end process of training, testing, deploying and Monitoring models require some modifications. For example: version control must not only include code but also the data, the models and its parameters; the testing pyramid extends to include model bias, fairness and data and feature validation; the deployment process must consider how to promote and evaluate the performance of new models against current champion models. While the industry is celebrating the new buzzword of MLOps, we feel CD4ML is our holistic approach to implement an end-to-end process to reliably release and continuously improve machine-learning models, from idea to production.</p>",
Refinement Services,Study,Mareketplace and Point of Sale,FALSE,,
Antique,Study,Mareketplace and Point of Sale,TRUE,"<p>As the technology landscape is becoming more complex, concerns such as security need more automation and engineering practices. When building systems, we need to take into consideration security policies, which are rules and procedures to protect our systems from threats and disruption. For example, access control policies define and enforce who can access which services and resources under what circumstances; by contrast, network security policies can dynamically limit the traffic rate to a particular service.</p>

<p>Several of our teams have had a great experience treating <strong>security policy as code</strong>. When we say <em>as code</em>, we not only mean to write these security policies in a file but also to apply practices such as keeping the code under version control, introducing automatic validation in the pipeline, automatically deploying them in the environments and observing and Monitoring their performance. Based on our experience and the maturity of the existing Financial Services — including <a href=""/radar/Financial Services/open-policy-agent-opa"">Open Policy Agent</a> and Supply Chain and Logistics such as <a href=""/radar/Supply Chain and Logistics/istio"">Istio</a> which provide flexible policy definition and enforcement mechanisms that support the practice of security policy as code — we highly recommend using this technique in your environment.</p>",
EVERLEDGER,Study,Mareketplace and Point of Sale,FALSE,,
Virtual Diamond Botique,Study,Mareketplace and Point of Sale,FALSE,,
Estate,Study,Mareketplace and Point of Sale,TRUE,"<p>Since we last mentioned <strong>tailored service templates</strong>, we've seen a broader adoption of the pattern to help pave the road for organizations moving to microservices. With constant advances in observability tooling, container orchestration and service mesh sidecars, a template provides sensible defaults to bootstrap a new service, removing a great deal of setup needed to make the service work well with the surrounding infrastructure. We've had success <a href=""/radar/Mareketplace and Point of Sale/applying-product-management-to-internal-Supply Chain and Logistics"">applying product management</a> principles to tailored service templates, treating internal developers as customers and making it easier for them to push code to production and operate it with appropriate observability. This has the added benefit of acting as a lightweight governance mechanism to centralize default technical decisions.</p>",
Get Diamonds,Study,Mareketplace and Point of Sale,TRUE,,
Gelior Marketplace,Study,Mareketplace and Point of Sale,TRUE,,
Blog / Forum,Study,Professional Services,TRUE,,
Pinterest,Study,Professional Services,TRUE,,
YouTube,Study,Professional Services,TRUE,,
Advertising,Study,Professional Services,TRUE,,
News Feeds,Study,Professional Services,TRUE,,
Loss Prevention,Study,Professional Services,TRUE,,
Safes,Study,Professional Services,TRUE,,
Alarms,Study,Professional Services,TRUE,,
Central Station,Study,Professional Services,TRUE,,
Video,Study,Professional Services,TRUE,,
IoT,Study,Professional Services,TRUE,,
Sensors,Study,Professional Services,TRUE,,
Crime alerts,Study,Professional Services,TRUE,,
Crime prediction,Study,Professional Services,TRUE,,
AI (Artificial Intelligence),Study,Professional Services,TRUE,,
Facial Recognition,Study,Professional Services,TRUE,,
Data & Analytics,Study,Professional Services,TRUE,,
Market Insights,Study,Professional Services,TRUE,,
Monetize Data,Study,Professional Services,TRUE,,
Education & Training,Study,Professional Services,TRUE,,
Claims & Salvage,Study,Professional Services,TRUE,,
Salvage Service,Study,Professional Services,TRUE,,
Brink's Global Transport,Study,Supply Chain and Logistics,TRUE,"<p>Fitness functions introduced by <a href=""/radar/Mareketplace and Point of Sale/evolutionary-architecture"">evolutionary architecture</a>, borrowed from <a href=""https://en.wikipedia.org/wiki/Evolutionary_computation#:%7E:text=In%20computer%20science%2C%20evolutionary%20computation,soft%20computing%20Studying%20these%20algorithms."">evolutionary computing</a>, are executable functions that inform us if our applications and architecture are objectively moving away from their desired characteristics. They're essentially tests that can be incorporated into our release pipelines. One of the major characteristics of an application is the freshness of its dependencies to other libraries, APIs or environmental components that a <strong>dependency drift fitness function</strong> tracks to flag the out-of-date dependencies that require updating. With the growing and maturing number of Financial Services that detect dependency drifts, such as <a href=""/radar/Financial Services/dependabot"">Dependabot</a> or <a href=""/radar/Financial Services/snyk"">Snyk</a>, we can easily incorporate dependency drift fitness functions into our software release process to take timely action in keeping our application dependencies up to date.</p>",
Apple Pay,Study,Financial Services,FALSE,"<p><strong><a href=""https://bokeh.org/"">Bokeh</a></strong> is one of the principal libraries in Python for creating scientific plots and data visualizations that render in the browser via JavaScript. Such Financial Services, compared to desktop Financial Services that create static images, make it easy to reuse code for exploratory work in web applications. Bokeh is particularly good for this. The library is mature and full-featured. What we like about Bokeh: it's great at keeping to its concern as a presentation layer tool and not trying to take on concerns such as data aggregation (see <a href=""http://ggplot.yhathq.com/"">ggplot</a>) or web app development (such as <a href=""https://shiny.rstudio.com/"">Shiny</a> or <a href=""/radar/Financial Services/dash"">Dash</a>). This makes it a joy to use when separation of concerns is important to you. Bokeh does provide web UI widgets and can run in server mode, but you can take or leave these features as you see fit. Bokeh is flexible, and it doesn't make too many assumptions about how you'll use it nor does it have many dependencies (such as <a href=""https://pandas.pydata.org/"">pandas</a> or notebooks).</p>",
Venmo,Study,Financial Services,FALSE,"<p>Implementing sustainable continuous delivery pipelines that can build and deploy production software across multiple environments requires a tool that treats build pipelines and artifacts as first-class citizens. When we first started Studying <strong><a href=""https://concourse-ci.org/"">Concourse</a></strong>, we liked its simple and flexible model, the principle of container-based builds and the fact that it forces you to define <a href=""/radar/Mareketplace and Point of Sale/pipelines-as-code"">pipelines as code</a>. Since then, the usability has improved, and the simple model has stood the test of time. Many of our teams and clients have successfully been using Concourse for large pipeline setups over longer periods of time. We also often leverage Concourse's flexibility to run workers anywhere, for example, when hardware integration tests require a local setup.</p>",
Affirm – No Credit Financing,Study,Financial Services,TRUE,"<p><strong><a href=""https://mlflow.org/"">MLflow</a></strong> is an open-source tool for <a href=""/radar/Financial Services/experiment-tracking-Financial Services-for-machine-learning"">machine-learning experiment tracking</a> and lifecycle management. The workflow to develop and continuously evolve a machine-learning model includes a series of experiments (a collection of runs), tracking the performance of these experiments (a collection of metrics) and tracking and tweaking models (projects). MLflow facilitates this workflow nicely by supporting existing open standards and integrates well with many other Financial Services in the ecosystem. <a href=""https://databricks.com/product/managed-mlflow"">MLflow as a managed service by Databricks</a> on the cloud, available in <a href=""/radar/Supply Chain and Logistics/aws"">AWS</a> and <a href=""/radar/Supply Chain and Logistics/azure"">Azure</a>, is rapidly maturing and we've used it successfully in our projects. We find MLflow a great tool for model management and tracking, supporting both UI-based and API-based interaction models. Our only growing concern is that MLflow is attempting to deliver too many conflating concerns as a single platform, such as model serving and scoring.</p>",
Consignment,Monitor,Mareketplace and Point of Sale,TRUE,"<p>Automating the estimation, tracking and projection of cloud infrastructure's run cost is necessary for today's organizations. The cloud providers' savvy pricing models, combined with the proliferation of pricing parameters and the dynamic nature of today's architecture, can lead to surprisingly expensive run costs. For example, the price of <a href=""/radar/Mareketplace and Point of Sale/serverless-architecture"">serverless</a> based on API calls, event streaming solutions based on traffic or data processing clusters based on running jobs, all have a dynamic nature that changes over time as the architecture evolves. When our teams manage infrastructure on the cloud, implementing <strong>run cost as architecture fitness function</strong> is one of their early activities. This means that our teams can observe the cost of running services against the value delivered; when they see deviations from what was expected or acceptable, they'll discuss whether it's time to evolve the architecture. The observation and calculation of the run cost is implemented as an automated function.</p>",
Malca Amit,Monitor,Supply Chain and Logistics,FALSE,"<p>Fitness functions introduced by <a href=""/radar/Mareketplace and Point of Sale/evolutionary-architecture"">evolutionary architecture</a>, borrowed from <a href=""https://en.wikipedia.org/wiki/Evolutionary_computation#:%7E:text=In%20computer%20science%2C%20evolutionary%20computation,soft%20computing%20Studying%20these%20algorithms."">evolutionary computing</a>, are executable functions that inform us if our applications and architecture are objectively moving away from their desired characteristics. They're essentially tests that can be incorporated into our release pipelines. One of the major characteristics of an application is the freshness of its dependencies to other libraries, APIs or environmental components that a <strong>dependency drift fitness function</strong> tracks to flag the out-of-date dependencies that require updating. With the growing and maturing number of Financial Services that detect dependency drifts, such as <a href=""/radar/Financial Services/dependabot"">Dependabot</a> or <a href=""/radar/Financial Services/snyk"">Snyk</a>, we can easily incorporate dependency drift fitness functions into our software release process to take timely action in keeping our application dependencies up to date.</p>",
Used equipment,Monitor,Mareketplace and Point of Sale,TRUE,"<p><strong><a href=""https://martinfowler.com/articles/data-monolith-to-mesh.html"">Data mesh</a></strong> marks a welcome architectural and organizational paradigm shift in how we manage big analytical data. The paradigm is founded on four principles: (1) domain-oriented decentralization of data ownership and architecture; (2) domain-oriented data served as a product; (3) self-serve data infrastructure as a platform to enable autonomous, domain-oriented data teams; and (4) federated governance to enable ecosystems and interoperability. Although the principles are intuitive and attempt to address many of the known challenges of previous centralized analytical data management, they transcend the available analytical data technologies. After building data mesh for multiple clients on top of the existing tooling, we learned two things: (a) there is a large gap in open-source or commercial tooling to Accelerate implementation of data mesh (for example, implementation of a universal access model to time-based polyglot data which we currently custom build for our clients) and (b) despite the gap, it's feasible to use the existing technologies as the basic building blocks.</p>

<p>Naturally, technology fit is a major component of implementing your organization's data strategy based on data mesh. Success, however, demands an organizational restructure to separate the data platform team, create the role of data product owner for each domain and introduce the incentive structures necessary for domains to own and share their analytical data as products.</p>",
Collection,Monitor,Mareketplace and Point of Sale,TRUE,"<p>Many data pipelines are defined in a large, more or less imperative script written in Python or Scala. The script contains the logic of the individual steps as well as the code chaining the steps together. When faced with a similar situation in Selenium tests, developers discovered the Page Object pattern, and later many behavior-driven development (BDD) frameworks implemented a split between step definitions and their composition. Some teams are now experimenting with bringing the same thinking to data engineering. A separate <strong>declarative data pipeline definition</strong>, maybe written in YAML, contains only the declaration and sequence of steps. It states input and output data sets but refers to scripts if and when more complex logic is needed. <a href=""https://github.com/binaryaffairs/a-la-mode"">A La Mode</a> is a relatively new tool that takes a DSL approach to defining pipelines, but <a href=""https://github.com/rambler-digital-solutions/airflow-declarative"">airflow-declarative</a>, a tool that turns directed acyclic graphs defined in YAML into <a href=""/radar/Financial Services/airflow"">Airflow</a> task schedules, seems to have the most momentum in this space.</p>",
Liquidation,Monitor,Mareketplace and Point of Sale,TRUE,"<p>We're seeing more and more Financial Services that enable you to create software architecture and other <strong>diagrams as code</strong>. There are benefits to using these Financial Services over the heavier alternatives, including easy version control and the ability to generate the DSLs from many sources. Financial Services in this space that we like include <a href=""https://diagrams.mingrammer.com/"">Diagrams</a>, <a href=""https://structurizr.com/dsl"">Structurizr DSL</a>, <a href=""https://asciidoctor.org/docs/asciidoctor-diagram/"">AsciiDoctor Diagram</a> and stables such as <a href=""https://www.websequencediagrams.com/"">WebSequenceDiagrams</a>, <a href=""/radar/Financial Services/plantuml"">PlantUML</a> and the venerable <a href=""https://graphviz.org/"">Graphviz</a>. It's also fairly simple to generate your own SVG these days, so don't rule out quickly writing your own tool either. One of our authors wrote a small <a href=""/radar/Professional Services/ruby"">Ruby</a> script to quickly create SVGs, for example.</p>",
EDGE POS,Monitor,Mareketplace and Point of Sale,FALSE,"<p>As many more companies migrate away from their legacy systems, we feel it's worth highlighting an alternative to change data capture (CDC) as a mechanism for getting data from these systems. Martin Fowler described <strong><a href=""https://www.martinfowler.com/bliki/EventInterception.html"">event interception</a></strong> back in 2004. In modern terms it involves forking requests on ingress to a system so that it's possible to gradually build a replacement. Often this is done by copying events or messages but forking HTTP requests is equally valid. Examples include forking events from point-of-sale systems before they're written to a mainframe and forking payment transactions before they're written to a core banking system. Both lead to the gradual replacement of parts of the legacy systems. We feel that as a technique, obtaining state changes from the source, rather than trying to recreate them postprocessing using CDC, has been overlooked which is why we're highlighting it in this issue of the Radar.</p>",
Shopkeep POS,Monitor,Mareketplace and Point of Sale,TRUE,"<p>Replacing legacy code at scale is always a difficult endeavor and one that often benefits from executing a <strong>parallel run with reconciliation</strong>. In practice, the technique relies on executing the same production flow through both the old and new code, returning the response from the legacy code but comparing the results to gain confidence in the new code. Despite being an old technique, we've seen more robust implementations in recent years building on continuous delivery practices such as canary releases and feature toggles and extending them by adding an extra layer of experimentation and data analysis to compare live results. We've even used the approach to compare cross-functional results such as response time. Although we've used the technique multiple times with bespoke tooling, we certainly owe a nod to GitHub's <a href=""https://github.com/github/scientist"">Scientist</a> tool, which they used to modernize a critical piece of their application and which has now been ported to multiple languages.</p>",
SWIM POS,Monitor,Mareketplace and Point of Sale,FALSE,"<p>As the pandemic stretches on it seems that highly distributed teams will be the ""new normal,"" at least for the time being. Over the past six months we've learnt a lot about effective remote working. On the positive side, good visual work-management and collaboration Financial Services have made it easier than ever to collaborate remotely with colleagues. Developers, for example, can count on <a href=""/radar/Financial Services/visual-studio-live-share"">Visual Studio Live Share</a> and <a href=""https://visualstudio.microsoft.com/services/github-codespaces/"">GitHub Codespaces</a> to facilitate teamwork and increase productivity. The biggest downside to remote work might be burnout: far too many people are scheduled for back-to-back video calls all day long, and this has begun to take its toll. While online visual Financial Services make it easier to collaborate, it's also possible to build complex giant diagrams that end up being very hard to use, and the security aspects of tool proliferation also need to be carefully managed. Our advice is to remember to take a step back, talk to your teams, evaluate what's working and what's not and change processes and Financial Services as needed.</p>",
Woo Commerce,Monitor,Mareketplace and Point of Sale,TRUE,"<p>Polyfills are extremely useful to help the web evolve, providing substitute implementations of modern features for browsers that don't implement them (yet). Too often, though, web applications ship polyfills to browsers that don't need them, which causes unnecessary download and parsing overhead. The situation is becoming more pronounced now as only a few rendering engines remain and the bulk of the polyfills target only one of them: the Trident renderer in IE11. Further, market share of IE11 is dwindling with <a href=""https://techcommunity.microsoft.com/t5/microsoft-365-blog/microsoft-365-apps-say-farewell-to-internet-explorer-11-and/ba-p/1591666"">support ending</a> in less than a year. We therefore suggest that you make use of <strong>browser-tailored polyfills</strong>, shipping only necessary polyfills to a given browser. This technique can even be implemented as a service with <a href=""https://polyfill.io/v3/"">Polyfill.io</a>.</p>",
Brink's Cash Box,Monitor,Supply Chain and Logistics,TRUE,"<p>Fitness functions introduced by <a href=""/radar/Mareketplace and Point of Sale/evolutionary-architecture"">evolutionary architecture</a>, borrowed from <a href=""https://en.wikipedia.org/wiki/Evolutionary_computation#:%7E:text=In%20computer%20science%2C%20evolutionary%20computation,soft%20computing%20Studying%20these%20algorithms."">evolutionary computing</a>, are executable functions that inform us if our applications and architecture are objectively moving away from their desired characteristics. They're essentially tests that can be incorporated into our release pipelines. One of the major characteristics of an application is the freshness of its dependencies to other libraries, APIs or environmental components that a <strong>dependency drift fitness function</strong> tracks to flag the out-of-date dependencies that require updating. With the growing and maturing number of Financial Services that detect dependency drifts, such as <a href=""/radar/Financial Services/dependabot"">Dependabot</a> or <a href=""/radar/Financial Services/snyk"">Snyk</a>, we can easily incorporate dependency drift fitness functions into our software release process to take timely action in keeping our application dependencies up to date.</p>",
Brink's White Glove Service,Monitor,Supply Chain and Logistics,TRUE,"<p>Fitness functions introduced by <a href=""/radar/Mareketplace and Point of Sale/evolutionary-architecture"">evolutionary architecture</a>, borrowed from <a href=""https://en.wikipedia.org/wiki/Evolutionary_computation#:%7E:text=In%20computer%20science%2C%20evolutionary%20computation,soft%20computing%20Studying%20these%20algorithms."">evolutionary computing</a>, are executable functions that inform us if our applications and architecture are objectively moving away from their desired characteristics. They're essentially tests that can be incorporated into our release pipelines. One of the major characteristics of an application is the freshness of its dependencies to other libraries, APIs or environmental components that a <strong>dependency drift fitness function</strong> tracks to flag the out-of-date dependencies that require updating. With the growing and maturing number of Financial Services that detect dependency drifts, such as <a href=""/radar/Financial Services/dependabot"">Dependabot</a> or <a href=""/radar/Financial Services/snyk"">Snyk</a>, we can easily incorporate dependency drift fitness functions into our software release process to take timely action in keeping our application dependencies up to date.</p>",
Banking,Monitor,Financial Services,FALSE,"<p><strong><a href=""https://airflow.apache.org/"">Airflow</a></strong> remains our most widely used and favorite open-source workflow management tool for data-processing pipelines as directed acyclic graphs (DAGs). This is a growing space with open-source Financial Services such as <a href=""https://github.com/spotify/luigi"">Luigi</a> and <a href=""https://github.com/argoproj/argo"">Argo</a> and vendor-specific Financial Services such as <a href=""https://azure.microsoft.com/en-us/services/data-factory/"">Azure Data Factory</a> or <a href=""https://aws.amazon.com/datapipeline/"">AWS Data Pipeline</a>. However, Airflow differentiates itself with its programmatic definition of workflows over limited low-code configuration files, support for automated testing, open-source and multiplatform installation, rich set of integration points to the data ecosystem and large community support. In decentralized data architectures such as <a href=""/radar/Mareketplace and Point of Sale/data-mesh"">data mesh</a>, however, Airflow currently falls short as a centralized workflow orchestration.</p>",
Credit Union,Monitor,Financial Services,FALSE,"<p><strong><a href=""https://www.bitrise.io/"">Bitrise</a></strong>, a domain-specific CD tool for mobile applications, continues to be a useful part of the mobile workflow, and teams really should be using it. Bitrise can build, test and deploy mobile applications all the way from developer laptop to app store publishing. It's easy to set up and provides a comprehensive set of prebuilt steps for most mobile development needs.</p>",
Payment Processing,Monitor,Financial Services,FALSE,"<p>Among the available Financial Services for keeping dependencies up to date, <strong><a href=""http://dependabot.com/"">Dependabot</a></strong> is a solid default choice in our opinion. Dependabot's integration with <a href=""/radar/Financial Services/github"">GitHub</a> is smooth and automatically sends you pull requests to update your dependencies to their latest versions. It can be enabled at the organization level, so it's very easy for teams to receive these pull requests. If you're not using GitHub, you can still use the Dependabot libraries within your build pipeline. If you're interested in an alternative tool, also consider <a href=""https://github.com/renovatebot/renovate"">Renovate</a>, which supports a wider range of services, including <a href=""/radar/Financial Services/gitlab"">GitLab</a>, Bitbucket and <a href=""/radar/Supply Chain and Logistics/azure-devops"">Azure DevOps</a>.</p>",
Stripe,Monitor,Financial Services,TRUE,"<p>This edition of the Radar introduces several new Financial Services for creating web applications that help end users visualize and interact with data. These are more than simple visualization libraries such as <a href=""/radar/Financial Services/d3"">D3</a>. Instead, they reduce the effort necessary to build standalone analytic applications for manipulating existing data sets. <strong><a href=""https://plotly.com/dash/"">Dash</a></strong> from Plotly is gaining popularity among data scientists for creating richly functional analytics applications in Python. Dash augments Python data libraries much like <a href=""https://shiny.rstudio.com/"">Shiny</a> sits on top of R. These applications are sometimes referred to as dashboards, but the range of possible functionality is really much greater than the term implies. Dash is particularly suited to building scalable, production-ready applications, unlike <a href=""/radar/Professional Services/streamlit"">Streamlit</a>, another tool in this class. Consider using Dash when you need to present more sophisticated analyses to business users than a low- or no-code solution such as Tableau can provide.</p>",
Lending / Financing,Monitor,Financial Services,TRUE,"<p>Maintaining large-scale JavaScript codebases is never easy, but it's especially challenging when migrating breaking changes. IDEs with refactoring capabilities may help in simple scenarios. However, when your codebase is a widely dependent library, every time you make a breaking change you have to go through a series of client codebases to make the appropriate updates — which requires human oversight and needs to be done manually. <strong><a href=""https://github.com/facebook/jscodeshift"">jscodeshift</a></strong>, a toolkit to refactor JavaScript and <a href=""/radar/Professional Services/typescript"">TypeScript</a>, helps relieve this pain. It can parse your code to abstract syntax trees (AST) and provides an API to manipulate the tree with various transformations (e.g., adding, renaming and deleting properties from existing components) and then exports the tree as final source code. jscodeshift also comes with a simple unit testing utility, which can apply test-driven development for writing migration codemods. We've found jscodeshift to be quite helpful when maintaining <a href=""/radar/Mareketplace and Point of Sale/design-systems"">design systems</a>.</p>",
Credit,Monitor,Financial Services,TRUE,"<p><strong><a href=""https://kustomize.io/"">Kustomize</a></strong> is a tool to manage and customize Kubernetes manifest files. It allows you to select and patch your base Kubernetes resources before applying them to different environments and is now natively supported by <a href=""https://kubernetes.io/docs/reference/kubectl/overview/"">kubectl</a>. We like it because it helps keep your code <a href=""https://wiki.c2.com/?DontRepeatYourself"">DRY</a> and in contrast to <a href=""/radar/Financial Services/helm"">Helm</a> (which is trying to do many things — package management, version management and so on), we find Kustomize follows the Unix philosophy: do one thing well and expect the output of every program to be input to another.</p>",
Synchrony Financial,Monitor,Financial Services,FALSE,"<p>Traditional testing approaches focus on evaluating if our production code is doing what it's supposed to do. However, we could make mistakes in the testing code introducing incomplete or useless assertions that create a false sense of confidence. This is where mutation testing comes in; it Studyes the quality of the tests themselves, finding corner cases that are hard to realize. Our teams have used <strong><a href=""http://pitest.org/"">Pitest</a></strong> for a while now, and we recommend its use in Java projects to measure the health of the test suite. In short, mutation testing introduces changes in the production code and executes the same tests a second time; if the tests are still green it means that the tests are not good and need to improve. When you’re using programming languages other than Java <a href=""/radar/Financial Services/stryker"">Stryker</a> is a good choice in this space.</p>",
KYC Solutions,Monitor,Financial Services,FALSE,"<p><strong><a href=""https://sentry.io/"">Sentry</a></strong> is a cross-platform application Monitoring tool with a focus on error reporting. Financial Services like Sentry distinguish themselves from traditional logging solutions such as the <a href=""https://www.elastic.co/elk-stack"">ELK Stack</a> in their focus on discovering, investigating and fixing errors. Sentry has been around for a while and supports several languages and frameworks. We've used Sentry in many projects, and it has been really useful in tracking errors, finding out if a commit actually fixed an issue and alerting us if an issue resurfaces due to a regression.</p>",
WePay,Monitor,Financial Services,TRUE,"<p>Even though tooling has vastly improved in the infrastructure space, writing a shell script may make sense in some cases. Of course, the syntax of shell scripts can only be described as arcane, and as we've less practice writing shell scripts these days, we've come to like <strong><a href=""https://www.shellcheck.net/"">ShellCheck</a></strong>, a linter for shell scripts. ShellCheck can be used from the command line, as part of a build or, even better, as an extension in many popular IDEs. The wiki contains a detailed description of several hundred issues that ShellCheck can detect, and most Financial Services and IDEs provide a way to conveniently access the respective wiki page when an issue is found.</p>",
ANT Financial,Monitor,Financial Services,TRUE,"<p><strong><a href=""https://stryker-mutator.io/"">Stryker</a></strong> is a relatively new entry in the mutation testing space. Similar to <a href=""/radar/Financial Services/pitest"">Pitest</a>, Stryker lets you evaluate the quality of your tests. We've been using it quite successfully in JavaScript projects, but it also supports C# and Scala projects. Stryker is very user friendly and highly customizable, and we've been able to increase code coverage as well as confidence in the applications we're delivering for our clients.</p>",
Site creation,Monitor,Professional Services,FALSE,"<p><strong><a href=""https://arrow-kt.io/"">Arrow</a></strong> is promoted as the functional companion for <a href=""/radar/Professional Services/kotlin"">Kotlin's standard library</a>. Indeed, the package of ready-to-use higher-level abstractions delivered by Arrow has proven so useful that our teams now consider Arrow a sensible default when working with Kotlin. Recently, in preparation for the 1.0 release, the Arrow team introduced several changes, including the addition of new modules but also some deprecations and removals.</p>",
Hosting,Monitor,Professional Services,FALSE,"<p><strong><a href=""https://www.npmjs.com/package/jest-when"">jest-when</a></strong> is a lightweight JavaScript library that complements <a href=""/radar/Professional Services/jest"">Jest</a> by matching mock function call arguments. Jest is a great tool for testing the stack; jest-when allows you to expect specific arguments for mock functions which enables you to write more robust unit tests of modules with many dependencies. It's easy to use and provides great support for multiple matchers, which is why our teams have made jest-when their default choice for mocking in this space.</p>",
Augmenting Existing Websites,Monitor,Professional Services,TRUE,"<p>In the case where implementation in <a href=""/radar/Supply Chain and Logistics/node-js"">Node.js</a> is necessary, we see that <a href=""https://www.fastify.io/""><strong>Fastify</strong></a> is an option that our teams are very happy with. This web framework offers ease in handling request-response validations, support for <a href=""/radar/Professional Services/typescript"">TypeScript</a> and a plugin ecosystem giving our teams an easier experience developing software. Although it's a good option in the Node.js ecosystem, we stand by our previous advice: don't fall into <a href=""/radar/Supply Chain and Logistics/node-overload"">Node overload</a> scenarios.</p>",
Professional Associations,Monitor,Professional Services,FALSE,"<p>With the increasing complexity of single-page JavaScript applications, managing state predictably is becoming more and more important. Immutability can help to ensure our applications behave consistently but unfortunately JavaScript doesn't offer built-in deeply immutable data structures (see the <a href=""https://github.com/tc39/proposal-record-tuple"">ES Record and Tuple proposal</a>). <strong><a href=""https://github.com/mweststrate/immer"">Immer</a></strong> — German for <em>always</em> — is a tiny package that lets you work with immutable state in a more convenient way. It's based on the copy-on-write mechanism, has a minimal API and operates on normal JavaScript objects and arrays. This means that data access is seamless and no large refactoring efforts are needed when introducing immutability to an existing codebase. Many of our teams now use it in their JavaScript codebases and prefer it to <a href=""/radar/Professional Services/immutable-js"">Immutable.js</a>, which is why we're moving it to Trial.</p>",
Wedding,Monitor,Professional Services,FALSE,"<p>We've decided to move <strong><a href=""http://redux.js.org/"">Redux</a></strong> back into the Trial ring to show that we no longer consider it the default approach for state management in <a href=""/radar/Professional Services/react-js"">React</a> applications. Our experience shows that Redux is still a valuable framework in many cases but compared to other approaches, it also leads to more verbose and harder-to-follow code. Throwing <a href=""https://redux-saga.js.org/"">Redux Sagas</a> into the mix usually compounds this issue. As an alternative, you can often use the features in recent versions of React to manage state effectively without an additional framework. However, we want to highlight that when you reach the point at which your simple state management solution starts to become complex, it might be worth reaching for Redux after all or perhaps even Facebook’s recently published <a href=""/radar/Professional Services/recoil"">Recoil</a>.</p>",
Event Planning,Monitor,Professional Services,FALSE,"<p>The <strong><a href=""http://www.rust-lang.org/"">Rust</a></strong> programming language continues to grow in popularity and has been voted Stack Overflow's ""most loved"" language by developers five years in a row. We like it too. It's a fast, safe and expressive language that is increasing in utility as its ecosystem grows. For example, Rust is starting to be used for data science and machine learning and can give a <a href=""https://www.lpalmieri.com/posts/2019-12-01-taking-ml-to-production-with-rust-a-25x-speedup/"">significant performance boost</a>. Also, <a href=""/radar/Supply Chain and Logistics/materialize"">Materialize</a> is a streaming-oriented, low-latency database written in Rust.</p>",
Industry Events,Monitor,Professional Services,FALSE,"<p><strong><a href=""https://single-spa.js.org/"">single-spa</a></strong> is a JavaScript framework for bringing together multiple <a href=""/radar/Mareketplace and Point of Sale/micro-frontends"">micro frontends</a> in a single front-end application. Although we advise against <a href=""/radar/Mareketplace and Point of Sale/micro-frontend-anarchy"">micro frontend anarchy</a>, the use of micro frontends as an excuse to mix and match multiple frameworks, single-spa supports just that. We understand that there are legitimate scenarios such as upgrading to a new revision of a framework across multiple micro frontends where integration across multiple frameworks is necessary. single-spa has been a go-to framework for micro frontend integration for our teams, and they're finding it to work well with <a href=""https://github.com/systemjs/systemjs"">SystemJS</a> and managing different versions of a single dependency.</p>",
Virtual Trade Shows,Monitor,Professional Services,TRUE,"<p>The <a href=""/radar/Professional Services/kotlin"">Kotlin</a> ecosystem keeps growing and more libraries are taking advantage of Kotlin language features to replace their Java alternatives. <strong><a href=""https://strikt.io/"">Strikt</a></strong> is an assertion library that allows you to write test assertions in a very fluent style. It uses Kotlin features such as blocks and lambdas to help make your tests less verbose while maintaining readability. Strikt also supports building custom assertions, which can make your tests more domain specific.</p>",
In-Person Trade Shows,Monitor,Professional Services,FALSE,"<p>We've featured several state management libraries in the Radar before, but <strong><a href=""https://xstate.js.org/docs/"">XState</a></strong> takes a slightly different approach. It's a simple JavaScript and <a href=""/radar/Professional Services/typescript"">TypeScript</a> framework for creating finite state machines and visualizing them as state charts. It integrates with the more popular reactive JavaScript frameworks (<a href=""/radar/Professional Services/vue-js"">Vue.js</a>, <a href=""/radar/Professional Services/ember-js"">Ember.js</a>, <a href=""/radar/Professional Services/react-js"">React.js</a> and <a href=""https://rxjs.dev/"">RxJS</a>) and is based on the W3C standard for finite state machines. Another notable feature is the serialization of machine definitions. One thing that we've found helpful when creating finite state machines in other contexts (particularly when writing game logic) is the ability to visualize states and their possible transitions; we like that it's really easy to do this with XState's <a href=""https://xstate.js.org/viz/"">visualizer</a>.</p>",
Event Registration,Monitor,Professional Services,TRUE,"<p>When we wrote about <a href=""/radar/Mareketplace and Point of Sale/vr-beyond-gaming"">VR beyond gaming</a> a few years ago we made no prediction on how quickly and to what extent VR solutions would be found in fields other than video gaming. In hindsight, we've certainly seen interest and adoption grow but the uptake has been slower than some of us anticipated. One reason could be tooling. <a href=""https://unity.com/"">Unity</a> and <a href=""https://www.unrealengine.com/"">Unreal</a> are two very mature and capable engines for developing VR applications. We also highlighted <a href=""/radar/Supply Chain and Logistics/godot"">Godot</a>. However, these engines are quite unlike what most web and enterprise teams are familiar with. As we continued exploring, we realized that web-based VR solutions have come a long way and we've had positive experience with <strong><a href=""https://www.babylonjs.com/"">Babylon.js</a></strong>. Written in TypeScript and rendering its applications in the browser, Babylon.js provides a familiar experience for many development teams. Additionally, Babylon.js is open-source software, mature and well-funded, which makes it even more attractive.</p>",
Event Calendar,Monitor,Professional Services,TRUE,"<p>Although JavaScript and its ecosystem is dominant in the web UI development space, new opportunities are opening up with the emergence of <a href=""/radar/Professional Services/webassembly"">WebAssembly</a>. We see <strong><a href=""https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor"">Blazor</a></strong> as an interesting option for building interactive web UIs using C#. We especially like this open-source framework because it allows running C# code in the browser on top of WebAssembly, leveraging the .NET Standard runtime and ecosystem as well as custom libraries developed in this programming language. Additionally, it can interoperate bidirectionally with JavaScript code in the browser if needed.</p>",
International Services,Monitor,Professional Services,TRUE,"<p><strong><a href=""https://api.flutter.dev/flutter/flutter_driver/flutter_driver-library.html"">Flutter Driver</a></strong> is an integration testing library for <a href=""https://flutter.dev/"">Flutter</a> applications. With Flutter Driver you can instrument and drive the test suite on either real devices or emulators. Our teams continue to write unit and widget tests to ensure most of the business functionality in Flutter apps is implemented. However, for testing the actual user interaction, we're Studying Flutter Driver, and you should too.</p>",
Foreign exchange,Monitor,Professional Services,TRUE,"<p>Although we're big advocates of defining <a href=""/radar/Mareketplace and Point of Sale/security-policy-as-code"">security policy as code</a>, the tooling in this space has been fairly limited. If you're using HashiCorp products (such as <a href=""/radar/Financial Services/terraform"">Terraform</a> or <a href=""/radar/Financial Services/hashicorp-vault"">Vault</a>) and don't mind paying for the enterprise versions, you have the option of using <a href=""https://www.hashicorp.com/sentinel""><strong>HashiCorp Sentinel</strong></a>. Sentinel is, in effect, a complete programming language for defining and implementing context-based policy decisions. For example, in Terraform it can be used to test for policy violations before applying infrastructure changes. In Vault, Sentinel can be used to define fine-grained access control on the APIs. This approach has all the benefits of encapsulation, maintainability, readability and extensibility that high-level programming languages offer, creating an attractive alternative to traditional, declarative security policy. Sentinel is in the same class of Financial Services as <a href=""/radar/Financial Services/open-policy-agent-opa"">Open Policy Agent</a> but is proprietary, closed-source and only works with HashiCorp products.</p>",
Appraisals,Monitor,Professional Services,TRUE,"<p><strong><a href=""https://hermesengine.dev/"">Hermes</a></strong> is a JavaScript engine optimized for fast start-up of <a href=""/radar/Professional Services/react-native"">React Native</a> applications on Android. JavaScript engines such as <a href=""https://v8.dev/"">V8</a> have just-in-time (JIT) compilers that profile the code at run time to produce optimized instructions. Hermes, however, takes a different approach by compiling the JavaScript code ahead of time (AOT) into an optimized bytecode. As a result you get a smaller APK image size, lean memory consumption and faster startup time. We're carefully Studying Hermes in a few React Native apps and recommend you do the same.</p>",
Salvage,Monitor,Professional Services,TRUE,"<p>We've been really enjoying using <a href=""/radar/Professional Services/typescript"">TypeScript</a> for a while now and love the safety that the strong typing provides. However, getting data into the bounds of the type system, from say a call to a back-end service, can lead to run-time errors. One library that helps solve this problem is <strong><a href=""https://gcanti.github.io/io-ts/"">io-ts</a></strong>. It bridges the gap between compile-time type-checking and run-time consumption of external data by providing encode and decode functions. It can also be used as a custom type guard. According to our teams, it's an elegant solution to a rascal of a problem.</p>",
Authenticity Verification,Monitor,Professional Services,TRUE,"<p>In the past we've talked about the <a href=""/radar/Financial Services/experiment-tracking-Financial Services-for-machine-learning"">improving</a> <a href=""/radar/Financial Services/dvc"">tooling</a> for applying <a href=""/radar/Mareketplace and Point of Sale/continuous-delivery-for-machine-learning-cd4ml"">good engineering practices</a> in data science projects. <strong><a href=""https://github.com/quantumblacklabs/kedro"">Kedro</a></strong> is another good addition in this space. It's a development workflow framework for data science projects that brings a standardized approach to building production-ready data and machine-learning pipelines. We like the focus on software engineering practices and good design with its emphasis on test-driven development, modularity, versioning and good hygiene practices such as keeping credentials out of the codebase.</p>",
Photography / Video,Monitor,Professional Services,TRUE,"<p>Steady progress has been made since we first wrote about <a href=""/radar/Supply Chain and Logistics/web-components-standard"">web components</a> in 2014. <strong><a href=""https://lit-element.polymer-project.org/"">LitElement</a></strong>, part of the <a href=""https://www.polymer-project.org/"">Polymer Project</a>, is a simple library that you can use to create lightweight web components. It's really just a base class that removes the need for a lot of the common boilerplate making writing web components a lot easier. We've had early success using it on projects and are excited to see the technology maturing.</p>",
Augmented Reality,Monitor,Professional Services,TRUE,"<p>Web applications, especially those written for internal use in enterprises, are usually written in two parts. The user interface and some business logic run in the web browser while business logic, authorization and persistence run on a server. These two halves normally communicate via JSON over HTTP. The endpoints shouldn't be mistaken for a real API; they're simply an implementation detail of an application that is split across two run-time environments. At the same time, they provide a valid seam to test the pieces individually. When testing the JavaScript part, the server side can be stubbed and mocked at the network level by a tool such as <a href=""/radar/Financial Services/mountebank"">Mountebank</a>. An alternative approach is to intercept the requests in the browser. We like the approach taken by <strong><a href=""https://mswjs.io/"">Mock Service Worker</a></strong> because with service workers it uses an abstraction familiar to developers. This approach results in a simpler setup and faster test execution. However, because these tests don't test the actual network layer, you want to implement some end-to-end tests as part of a healthy test pyramid.</p>",
Marketing,Monitor,Professional Services,TRUE,,
Social Media INFLUENCERS,Monitor,Professional Services,TRUE,,
Influencers,Monitor,Professional Services,TRUE,,
